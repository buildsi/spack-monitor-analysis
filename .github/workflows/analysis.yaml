name: Spack Monitor Analysis
on:
  pull_request: []
  workflow_dispatch: 
    inputs:
      package:
        description: 'Name of spack package to test'
        required: true
      analyzer:
        description: 'Spack analyzer to run (defaults to symbolator)'
        required: false
        default: 'symbolator'

jobs:
  prepare:
    runs-on: ubuntu-latest    
    permissions:
      packages: read
    name: Determine Container and Compiler Options
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate matrix
        run: python scripts/generate-matrix.py
  
  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    permissions:
      packages: read
    strategy:
      fail-fast: false
      matrix:
        # Each entry is a container, and then compiler within it
        container: ${{ fromJson(needs.prepare.outputs.containers) }}
        arch: ['linux/amd64'] # ,'linux/ppc64le','linux/arm64']
        #package: ["${{ github.event.inputs.package }}"]
        package: ["zlib"]

    container:
      image: ${{ matrix.container[0] }}
      options: "--platform=${{ matrix.arch }}"

    name: ${{ matrix.package }} ${{ matrix.container[0] }} ${{ matrix.container[1] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Make Space For Build
        run: |        
          ls /usr/share
          rm -rf /usr/share/dotnet
          rm -rf /opt/ghc

      - name: Run Build and Analyze
        env:
          SPACKMON_USER: ${{ secrets.SPACKMON_USER }}
          SPACKMON_TOKEN: ${{ secrets.SPACKMON_TOKEN }}
          SPACKMON_HOST: ${{ secrets.SPACKMON_HOST }}
        run: |
           printf "Preparing to build ${{ matrix.package }} ${{ matrix.container[1] }}\n"
           /bin/bash ./entrypoint.sh ${{ matrix.package }} ${{ matrix.container[1] }}
