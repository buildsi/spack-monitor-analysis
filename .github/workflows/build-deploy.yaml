name: Build Containers
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
                    # tag           dockerfile in docker/     platforms
        dockerfile: [[ubuntu-18.04, Dockerfile.ubuntu-18.04],
                     [ubuntu-20.04, Dockerfile.ubuntu-20.04],
                     [centos-7, Dockerfile.centos-7],
                     [centos-8, Dockerfile.centos-8],
                     [fedora, Dockerfile.fedora]] # linux/ppc64le can fail
        arch: ['linux/amd64','linux/ppc64le','linux/arm64']

    name: Build ${{ matrix.dockerfile[0] }} ${{ matrix.arch }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Container Tag
        run: |
          container="spack-${{ matrix.dockerfile[0] }}:latest"
          echo "container=${container}" >> $GITHUB_ENV

      - name: Check ${{ matrix.dockerfile[1] }} Exists
        run: |
          printf "Preparing to build ${{ env.container }} from ${{ matrix.dockerfile[1] }}"
          if [ ! -f "docker/${{ matrix.dockerfile[1]}}" ]; then
              printf "Dockerfile ${{ matrix.dockerfile[0]}} does not exist"
              exit 1;
          fi

      - name: Pull Docker Layers
        run: docker pull ghcr.io/buildsi/${{ env.container }} || exit 0 

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ matrix.dockerfile[1] }} ${{ matrix.arch }}
        uses: docker/build-push-action@v2
        with:
          file: docker/${{matrix.dockerfile[1]}}
          platforms: ${{ matrix.arch }}
          context: .
          load: true
          tags: ghcr.io/buildsi/${{ env.container }}

      - name: Derive Compiler Labels
        id: labels
        run: |
          docker run -i --rm ghcr.io/buildsi/${{ env.container }} spack compiler list --flat > compilers.txt
          labels=$(echo $(tr '\r\n' ',' < compilers.txt))
          labels="compilers=\"${labels}\""
          printf "Saving compiler labels ${labels}\n"         
          echo "compiler_labels=${labels}" >> $GITHUB_ENV
      
      - name: Deploy ${{ matrix.dockerfile[1] }}
        uses: docker/build-push-action@v2
        with:
          file: docker/${{matrix.dockerfile[1]}}
          platforms: ${{ matrix.arch }}
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/buildsi/${{ env.container }}
          labels: ${{ steps.labels.outputs.compiler_labels }}
